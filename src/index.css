@import url('https://fonts.cdnfonts.com/css/bebas-neue');
@import url('https://fonts.cdnfonts.com/css/poppins');
@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;500;600;700&family=DM+Serif+Display:ital@0;1&display=swap');
@import "tailwindcss";

:root {
  --font-galgo: "Galgo Condensed", "Helvetica Neue", Arial, sans-serif;
  --font-oswald: "Oswald", system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  --font-teko: "Teko", Arial, sans-serif;
  --font-bergstena: 'Bergstena Script', Arial, sans-serif;
  --font-birds-of-paradise: 'Birds of Paradise', Arial, sans-serif;
  --font-dirtylane: 'Dirtylane', Arial, sans-serif;
  
}
@font-face {
  font-family: 'Bergstena Decorated';
  src: url('/fonts/bergstena_script/BergstenaDecorated.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Bergstena Script';
  src: url('/fonts/bergstena_script/BergstenaScript.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Bergstena Swashed';
  src: url('/fonts/bergstena_script/BergstenaSwashed.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Birds of Paradise';
  src: url('/fonts/birds_of_paradise/Birds of Paradise.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Dirtylane';
  src: url('/fonts/dirtylane/Dirtylane.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}


@font-face {
  font-family: "Galgo Condensed";
  src:
    url("/fonts/galgo-condensed/Galgo.woff") format("woff"),
    url("/fonts/galgo-condensed/Galgo.ttf") format("truetype"),
    url("/fonts/galgo-condensed/Galgo.otf") format("opentype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Teko";
  src: url("/fonts/teko/Teko-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Teko";
  src: url("/fonts/teko/Teko-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Teko";
  src: url("/fonts/teko/Teko-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Teko";
  src: url("/fonts/teko/Teko-SemiBold.ttf") format("truetype");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Teko";
  src: url("/fonts/teko/Teko-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/* Oswald (light/regular/bold) */
@font-face {
  font-family: "Oswald";
  src: url("/fonts/oswald/Oswald-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url("/fonts/oswald/Oswald-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url("/fonts/oswald/Oswald-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/* Optional: utility shortcuts */
.font-galgo {
  font-family: "Galgo Condensed", "Helvetica Neue", Arial, sans-serif;
}
.font-oswald {
  font-family: "Oswald", system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
}

body {
  font-family: "Teko", Arial, sans-serif;
  letter-spacing: 0.1em;
}

@keyframes slide-in-left {
  from { opacity: 0; transform: translateX(-24px); }
  to   { opacity: 1; transform: translateX(0); }
}
@keyframes slide-in-right {
  from { opacity: 0; transform: translateX(24px); }
  to   { opacity: 1; transform: translateX(0); }
}

/* helper classes */
.animate-slide-in-left {
  animation: slide-in-left 500ms ease-out 1 both;
}
.animate-slide-in-right {
  animation: slide-in-right 500ms ease-out 1 both;
}

/* optional stagger for children */
.stagger > * { animation-delay: 0ms; }
.stagger > *:nth-child(2) { animation-delay: 80ms; }
.stagger > *:nth-child(3) { animation-delay: 160ms; }
.stagger > *:nth-child(4) { animation-delay: 240ms; }

/* Custom props and base */
:root{
  --width-default: min(1200px, 90vw);
  --diameter: 1432px; /* updated at runtime */
}

/* slider base (keep class hooks used in JSX) */
.slider .list .item .image{
  width: var(--diameter);
  height: var(--diameter);
  background-image: var(--url);
  background-size: var(--diameter) var(--diameter);
  background-position: center;
  border-radius: 50%;
}

/* pseudo layers */
.slider .list .item .image::before,
.slider .list .item .image::after{
  position: absolute;
  width: 70%;
  height: 70%;
  content: '';
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-120deg);
  background-image:
    linear-gradient(to right, #0004, #0004),
    var(--url);
  background-size: var(--diameter) var(--diameter);
  background-position: center;
  transition: 1s;
}
.slider .list .item .image::after{
  width: 30%;
  height: 30%;
  background-image: var(--url);
  border: 3px solid #fff2;
  transform: translate(-50%, -50%) rotate(-170deg);
}

/* when not active (handled via utility classes too) */
.slider .list .item .image{
  transition: 1s;
}

/* active sibling transforms (match original) */
.slider .list .item.active ~ .item .image{
  transform: rotate(60deg);
}
.slider .list .item.active ~ .item .image::before{
  transform: translate(-50%, -50%) rotate(120deg);
}
.slider .list .item.active ~ .item .image::after{
  transform: translate(-50%, -50%) rotate(170deg);
}
.slider .list .item.active ~ .item .content h2{
  transform: translateY(100%);
}

/* model animation */
@keyframes showModel{
  from{
    transform: translateX(-50%) scale(1.3) translateY(88px);
  }
}


@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}
.perspective-1000 { perspective: 1000px; }
.hover\:-rotate-y-6:hover { transform: rotateY(-6deg); }
.hover\:rotate-x-2:hover { transform: rotateX(2deg); }
.hover\:translate-z-4:hover { transform: translateZ(4px); }

@layer utilities {
  @keyframes fade-in-right {
    0% { opacity: 0; transform: translateX(24px); }
    100% { opacity: 1; transform: translateX(0); }
  }
  .animate-fade-in-right {
    animation: fade-in-right 600ms ease-out both;
  }
   @keyframes fade-in-left {
    0% { opacity: 0; transform: translateX(-24px); }
    100% { opacity: 1; transform: translateX(0); }
  }
  .animate-fade-in-left { animation: fade-in-left 600ms ease-out both; }
  
}